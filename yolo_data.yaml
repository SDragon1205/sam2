scratch:
  resolution: 640
  train_batch_size: 4
  num_train_workers: 10
  num_frames: 8
  max_num_objects: 3
  base_lr: 5.0e-6
  vision_lr: 3.0e-06
  phases_per_epoch: 1
  num_epochs: 40
  reverse_time_prob: 0.5

# Video transforms
vos:
  train_transforms:
    - _target_: training.dataset.transforms.ComposeAPI
      transforms:
        - _target_: training.dataset.transforms.RandomHorizontalFlip_yolo
          consistent_transform: True
        # - _target_: training.dataset.transforms.RandomAffine
        #   degrees: 25
        #   shear: 20
        #   image_interpolation: bilinear
        #   consistent_transform: True
        - _target_: training.dataset.transforms.RandomResizeAPI_yolo
          sizes: ${scratch.resolution}
          square: true
          consistent_transform: True
        - _target_: training.dataset.transforms.ColorJitter_yolo
          consistent_transform: True
          brightness: 0.1
          contrast: 0.03
          saturation: 0.03
          hue: null
        - _target_: training.dataset.transforms.RandomGrayscale_yolo
          p: 0.05
          consistent_transform: True
        - _target_: training.dataset.transforms.ColorJitter_yolo
          consistent_transform: False
          brightness: 0.1
          contrast: 0.05
          saturation: 0.05
          hue: null
        - _target_: training.dataset.transforms.ToTensorAPI_yolo
        - _target_: training.dataset.transforms.NormalizeAPI_yolo
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]

# data:
#   train:
#     _target_: training.dataset.sam2_datasets.TorchTrainMixedDataset
#     phases_per_epoch: ${scratch.phases_per_epoch}
#     batch_sizes:
#       - ${scratch.train_batch_size}

#     datasets:
#       - _target_: training.dataset.utils.RepeatFactorWrapper
#         dataset:
#           _target_: training.dataset.utils.ConcatDataset
#           datasets:
#           - _target_: training.dataset.vos_dataset.VOSDataset
#             transforms: ${vos.train_transforms}
#             training: true
#             video_dataset:
#               _target_: training.dataset.vos_raw_dataset.PNGRawDataset
#               img_folder: ${dataset.img_folder}
#               gt_folder: ${dataset.gt_folder}
#               file_list_txt: ${dataset.file_list_txt}
#             sampler:
#               _target_: training.dataset.vos_sampler.RandomUniformSampler
#               num_frames: ${scratch.num_frames}
#               max_num_objects: ${scratch.max_num_objects}
#             multiplier: ${dataset.multiplier}
#     shuffle: True
#     num_workers: ${scratch.num_train_workers}
#     pin_memory: True
#     drop_last: True
#     collate_fn:
#       _target_: training.utils.data_utils.collate_fn
#       _partial_: true
#       dict_key: all
sa1b_dataset:
  # PATHS to Dataset
  img_folder: "/home/si2/sdragon/visdrone dataset/VisDrone2019-DET-train/images/" # PATH to MOSE JPEGImages folder
  gt_folder: "/home/si2/sdragon/visdrone dataset/VisDrone2019-DET-train/annotations/"  # PATH to MOSE Annotations folder
  multiplier: 1

sav_dataset:
  # PATHS to Dataset
  img_folder: "/home/si2/sdragon/visdrone dataset/VisDrone2019-VID-train/sequences/" # PATH to MOSE JPEGImages folder
  gt_folder: "/home/si2/sdragon/visdrone dataset/VisDrone2019-VID-train/annotations/"  # PATH to MOSE Annotations folder
  multiplier: 1

data:
  train:
    _target_: training.dataset.sam2_datasets.TorchTrainMixedDataset 
    phases_per_epoch: ${scratch.phases_per_epoch} # Chunks a single epoch into smaller phases
    batch_sizes: # List of batch sizes corresponding to each dataset
    # - ${scratch.train_batch_size} # Batch size of dataset 1
    - ${scratch.train_batch_size} # Batch size of dataset 2
    datasets:
    # SA1B as an example of an image dataset
    - _target_: training.dataset.vos_dataset.VOSDataset_yolo
      training: true
      video_dataset:
        _target_: training.dataset.vos_raw_dataset.SA1BRawDataset_yolo
        img_folder: ${sa1b_dataset.img_folder}
        gt_folder: ${sa1b_dataset.gt_folder}
        # file_list_txt: ${path_to_train_filelist} # Optional
      sampler:
        _target_: training.dataset.vos_sampler.RandomUniformSampler_yolo
        num_frames: 1
      transforms: ${vos.train_transforms}
      multiplier: ${sa1b_dataset.multiplier}
    # # SA-V as an example of a video dataset
    # - _target_: training.dataset.vos_dataset.VOSDataset_yolo
    #   training: true
    #   video_dataset:
    #     _target_: training.dataset.vos_raw_dataset.JSONRawDataset_yolo
    #     img_folder: ${sav_dataset.img_folder}
    #     gt_folder: ${sav_dataset.gt_folder}
    #     # file_list_txt: ${path_to_train_filelist} # Optional
    #     # ann_every: 4
    #   sampler:
    #     _target_: training.dataset.vos_sampler.RandomUniformSampler_yolo
    #     num_frames: ${scratch.num_frames} # Number of frames per video
    #     reverse_time_prob: ${scratch.reverse_time_prob} # probability to reverse video
    #   transforms: ${vos.train_transforms}
    #   multiplier: ${sav_dataset.multiplier}
    shuffle: True
    num_workers: ${scratch.num_train_workers}
    pin_memory: True
    drop_last: True
    collate_fn:
      _target_: training.utils.data_utils.collate_fn_yolo
      _partial_: true
      dict_key: all
  distributed:
    backend: nccl
    find_unused_parameters: True
    timeout_mins: 30